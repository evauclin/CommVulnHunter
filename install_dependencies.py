#!/usr/bin/env python3
"""
install_dependencies.py
Script d'installation automatique des d√©pendances pour Email Filter
"""

import subprocess
import sys
import os


def install_package(package):
    """Installe un package Python"""
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", package])
        return True
    except subprocess.CalledProcessError:
        return False


def check_python_version():
    """V√©rifie la version de Python"""
    if sys.version_info < (3, 6):
        print("‚ùå Python 3.6+ requis. Version actuelle:", sys.version)
        return False
    print(f"‚úÖ Python {sys.version_info.major}.{sys.version_info.minor} d√©tect√©")
    return True


def main():
    print("üöÄ Installation des d√©pendances pour Email Filter")
    print("=" * 50)

    # V√©rification de Python
    if not check_python_version():
        sys.exit(1)

    # Liste des d√©pendances n√©cessaires
    dependencies = [
        "python-dotenv",  # Gestion des variables d'environnement
        "pandas",  # Manipulation de donn√©es (optionnel)
    ]

    print("\nüì¶ Installation des d√©pendances...")

    success_count = 0
    for package in dependencies:
        print(f"   Installation de {package}...", end=" ")
        if install_package(package):
            print("‚úÖ")
            success_count += 1
        else:
            print("‚ùå")

    print(f"\nüìä R√©sultat: {success_count}/{len(dependencies)} packages install√©s")

    # V√©rification de la configuration
    print("\nüîß V√©rification de la configuration...")

    if not os.path.exists(".env"):
        print("‚ö†Ô∏è  Fichier .env manquant")
        print("   Cr√©ez un fichier .env avec vos identifiants Gmail")

        # Proposer de cr√©er le fichier .env
        create_env = input("   Voulez-vous cr√©er le fichier .env maintenant ? (o/n): ")
        if create_env.lower() in ['o', 'oui', 'y', 'yes']:
            username = input("   Email Gmail: ")
            password = input("   Mot de passe d'application: ")

            with open(".env", "w") as f:
                f.write(f"EMAIL_USERNAME={username}\n")
                f.write(f"EMAIL_PASSWORD={password}\n")

            print("‚úÖ Fichier .env cr√©√©")
    else:
        print("‚úÖ Fichier .env trouv√©")

    # V√©rification des r√©pertoires
    os.makedirs("src/pages", exist_ok=True)
    os.makedirs("src/pages/docs/javascript", exist_ok=True)
    print("‚úÖ Structure de r√©pertoires v√©rifi√©e")

    print("\nüéâ Installation termin√©e!")
    print("\nüìã Prochaines √©tapes:")
    print("   1. Configurez votre fichier .env avec vos identifiants Gmail")
    print("   2. Lancez: python email_fetcher.py")
    print("   3. Ouvrez votre application web")


if __name__ == "__main__":
    main()